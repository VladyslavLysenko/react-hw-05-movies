{"version":3,"file":"static/js/884.dcb94ac0.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { FetchMovieDetails } from 'components/Api';\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState({ genres: [] });\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const getMoviesById = async () => {\n      try {\n        const movieDetails = await FetchMovieDetails(movieId);\n\n        setFilm({\n          poster: movieDetails.backdrop_path,\n          genres: movieDetails.genres,\n          title: movieDetails.original_title,\n          overview: movieDetails.overview,\n          score: movieDetails.vote_average,\n          date: movieDetails.release_date,\n        });\n      } catch (error) {\n        console.error();\n      }\n    };\n    getMoviesById();\n  }, [movieId]);\n\n  const { poster, title, overview, score, genres, date } = film;\n\n  let releaseDate = new Date(date);\n  let genresJoin = genres.map(item => item.name);\n  genresJoin = genresJoin.join(', ');\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>Get Back</Link>\n      <h2>MovieDetails</h2>\n      <h3>\n        {title} (\n        {releaseDate\n          ? (releaseDate = new Date(releaseDate).getFullYear())\n          : (releaseDate = '')}\n        )\n      </h3>\n      <img src={`https://image.tmdb.org/t/p/w500${poster}`} alt=\"movie\" />\n      <p>User Score: {Math.ceil(score)}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres:</h3>\n\n      {genres.length ? <p>{genresJoin}</p> : null}\n\n      <nav>\n        <StyledLink to=\"cast\">\n          <div>Cast</div>\n        </StyledLink>\n        <StyledLink to=\"reviews\">Reviews</StyledLink>\n      </nav>\n      <Suspense fallback={<div>...Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","_location$state$from","_location$state","_useState","useState","genres","_useState2","_slicedToArray","film","setFilm","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMoviesById","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","FetchMovieDetails","sent","poster","backdrop_path","title","original_title","overview","score","vote_average","date","release_date","t0","console","error","stop","apply","arguments","releaseDate","Date","genresJoin","map","item","name","join","_jsxs","children","_jsx","Link","to","current","getFullYear","src","concat","alt","Math","ceil","length","Suspense","fallback","Outlet"],"sourceRoot":""}